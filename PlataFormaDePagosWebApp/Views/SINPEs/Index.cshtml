@model IEnumerable<PlataFormaDePagosWebApp.SINPE>

@{
    ViewBag.Title = "Pagos SINPE";

    Func<bool, string> estadoTexto = estado => estado ? "Sincronizado" : "No sincronizado";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold text-primary">Pagos SINPE</h2>
        <a href="@Url.Action("Create")" class="btn text-white shadow-sm rounded-pill px-4" style="background-color: #0d5191;">
            <i class="fas fa-plus me-2"></i> Registrar nuevo pago
        </a>
        <!-- 🔹 Nuevo botón: Consultar SINPE vía API -->
        <a href="@Url.Action("Consultar", "SinpeApi")"
           class="btn btn-outline-primary shadow-sm rounded-pill px-4 ms-2">
            <i class="fas fa-search me-2"></i> Consultar SINPE (API)
        </a>

        <!-- 🔹 Nuevo botón: Recibir SINPE vía API -->
        <a href="@Url.Action("Recibir", "SinpeApi")"
           class="btn btn-outline-success shadow-sm rounded-pill px-4 ms-2">
            <i class="fas fa-cloud-download-alt me-2"></i> Recibir SINPE (API)
        </a>
    </div>

    <div class="table-responsive">
        <table class="table table-hover table-bordered align-middle shadow-sm">
            <thead class="table-light text-center">
                <tr>
                    <th>@Html.DisplayNameFor(model => model.First().TelefonoOrigen)</th>
                    <th>@Html.DisplayNameFor(model => model.First().NombreOrigen)</th>
                    <th>@Html.DisplayNameFor(model => model.First().TelefonoDestinatario)</th>
                    <th>@Html.DisplayNameFor(model => model.First().NombreDestinatario)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Monto)</th>
                    <th>@Html.DisplayNameFor(model => model.First().Descripcion)</th>
                    <th>Fecha de Registro</th>
                    <th>Fecha de Modificación</th>
                    <th>Estado</th>
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderByDescending(x => x.FechaDeRegistro))
                {
                    <tr>
                        <td>@item.TelefonoOrigen</td>
                        <td>@item.NombreOrigen</td>
                        <td>@item.TelefonoDestinatario</td>
                        <td>@item.NombreDestinatario</td>
                        <td>₡@item.Monto.ToString("N2")</td>
                        <td>@item.Descripcion</td>
                        <td>@item.FechaDeRegistro.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>@(item.FechaDeModificacion?.ToString("dd/MM/yyyy HH:mm") ?? "-")</td>
                        <td>
                            <span class="badge bg-@(item.Estado ? "success" : "secondary")">
                                @estadoTexto(item.Estado)
                            </span>
                        </td>
                        <td class="text-center">
                            <div class="d-flex justify-content-center gap-2">
                                <a href="@Url.Action("Edit", new { id = item.IdSinpe })" class="btn btn-warning btn-sm" title="Editar">
                                    <i class="fas fa-pen me-1"></i> Editar
                                </a>
                                <a href="@Url.Action("Details", new { id = item.IdSinpe })" class="btn text-white btn-sm" style="background-color:#0d5191" title="Detalles">
                                    <i class="fas fa-eye me-1"></i> Ver
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.IdSinpe })" class="btn btn-danger btn-sm" title="Eliminar">
                                    <i class="fas fa-trash-alt me-1"></i> Eliminar
                                </a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
